# PeerPrep Development Infrastructure

services:
  postgres:
    image: postgres:13
    container_name: peerprep-postgres-dev
    environment:
      POSTGRES_USER: peerprep
      POSTGRES_PASSWORD: peerprep
      POSTGRES_DB: postgres  # Default database
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-all-databases.sql:/docker-entrypoint-initdb.d/init-all-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peerprep"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - peerprep-dev

  # Redis - Shared caching and session store
  redis:
    image: redis:7-alpine
    container_name: peerprep-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - peerprep-dev

  # pgAdmin - Database administration interface
  pgadmin:
    image: dpage/pgadmin4
    container_name: peerprep-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@peerprep.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - peerprep-dev

  # Redis Commander - Redis administration interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: peerprep-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - peerprep-dev

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_dev_data:

networks:
  peerprep-dev:
    name: peerprep-dev
    driver: bridge