events {}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Start HTTP server
  server {
    # Inside the container, it listens on port 80
    listen 80;

    root /usr/share/nginx/html;
    index index.html;

    # Serve CRA build
    location /static/ {
      alias /usr/share/nginx/html/static/;
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # user service
    # if request comes in and it starts with /api/v1/users/
    location ^~ /api/v1/users/ {
      # strip prefix and forward the remainder to 'user-service' container on port 8001
      proxy_pass http://user-service:8001/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Authorization $http_authorization;
      proxy_read_timeout 60s;
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
    }

    # question service
    # if request comes in and it starts with /api/v1/questions/
    location ^~ /api/v1/questions/ {
      proxy_pass http://question-service:8003/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;

      proxy_read_timeout 60s;
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
    }

    # matching service
    # if request comes in and it starts with /api/v1/matching/
    location ^~ /api/v1/matching/ {
      proxy_pass http://matching-service:8002/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Authorization $http_authorization;

      # WebSocket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_read_timeout 60s;
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
    }

    # Serve index.html directly if asked for it
    location = /index.html { }

    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}